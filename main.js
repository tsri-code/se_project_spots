!function(){"use strict";function e(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",disabledButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",activeErrorClass:"modal__error_visible"},r=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent=""},o=(e,t,r)=>{(e=>Array.from(e).some((e=>!e.validity.valid)))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.disabledButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.disabledButtonClass)},a=(e,t,o)=>{t.forEach((t=>{r(e,t,o)}))},s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}setUserAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}changeLikeStatus(e,t){const r=t?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:r,headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a02b3a56-2aeb-4c2c-8ac4-78ecf247f130","Content-Type":"application/json"}}),c=document.querySelector(".profile__name"),i=document.querySelector(".profile__description"),l=document.querySelector(".profile__image"),d=document.querySelector(".profile__avatar-button"),u=document.querySelector(".profile__edit-button"),m=document.querySelector(".profile__add-button"),_=document.querySelectorAll(".modal"),h=document.querySelector("#edit-profile-modal"),f=document.querySelector("#new-post-modal"),v=document.querySelector("#edit-avatar-modal"),b=document.querySelector("#view-photo"),y=document.querySelector("#delete-card-modal"),p=document.querySelectorAll(".modal__close-btn"),S=document.forms["edit-profile-form"],q=document.querySelector("#name-input"),E=document.querySelector("#description-input"),k=document.forms["new-post-form"],L=f.querySelector("#caption-input"),g=f.querySelector("#image-link"),C=document.forms["edit-avatar"],$=document.querySelector("#avatar-link"),U=y.querySelector("form"),j=(U.querySelector('button[type="submit"]'),U.querySelector('button[type="button"]')),P=C.querySelector(".modal__submit-btn"),x=k.querySelector(".modal__submit-btn"),A=S.querySelector(".modal__submit-btn"),D=document.querySelector("#card-template").content,I=document.querySelector(".gallery__cards"),w=b.querySelector(".modal__image"),T=b.querySelector(".modal__caption");let B,N;function O(e){e.classList.add("modal_opened"),document.addEventListener("keydown",H)}function J(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",H)}function H(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&J(e)}}function z(e){const t=D.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__image"),o=t.querySelector(".card__title"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.src=e.link,r.alt=e.name,o.textContent=e.name,e.isLiked&&n.classList.add("card__like-button_active"),n.addEventListener("click",(t=>function(e,t){const r=e.target.closest(".card__like-button"),o=r.classList.contains("card__like-button_active");s.changeLikeStatus(t,o).then((e=>{e.isLiked?r.classList.add("card__like-button_active"):r.classList.remove("card__like-button_active")})).catch(console.error)}(t,e._id))),a.addEventListener("click",(()=>function(e,t){B=e,N=t._id,O(y)}(t,e))),r.addEventListener("click",(()=>{O(b),w.src=e.link,T.textContent=e.name,T.alt=e.name})),t}var M;s.getAppInfo().then((e=>{let[t,r]=e;l.src=r.avatar,c.textContent=r.name,i.textContent=r.about,t.forEach((e=>{const t=z(e);I.append(t)}))})).catch(console.error),u.addEventListener("click",(function(){q.value=c.textContent,E.value=i.textContent,a(S,[q,E],t),O(h),n(A,t)})),m.addEventListener("click",(function(){O(f)})),d.addEventListener("click",(function(){a(C,[$],t),O(v),n(P,t)})),C.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;e(r,!0),s.setUserAvatar({avatar:$.value}).then((e=>{document.querySelector(".profile__image").src=e.avatar,J(v),t.target.reset()})).catch(console.error).finally((()=>{e(r,!1)}))})),U.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;e(r,!0,"Delete","Deleting..."),s.deleteCard(N).then((()=>{B.remove(),J(y)})).catch(console.error).finally((()=>{e(r,!1,"Delete","Deleting...")}))})),S.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;e(r,!0),s.editUserInfo({name:q.value,about:E.value}).then((e=>{c.textContent=e.name,i.textContent=e.about,J(h)})).catch(console.error).finally((()=>{e(r,!1)}))})),k.addEventListener("submit",(function(r){r.preventDefault();const o=r.submitter;e(o,!0);const a={name:L.value,link:g.value};s.addCard(a).then((e=>{const o=z(e);I.prepend(o),r.target.reset(),n(x,t),J(f)})).catch(console.error).finally((()=>{e(o,!1)}))})),j.addEventListener("click",(()=>J(y))),_.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_opened")&&J(e)}))})),p.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>J(t)))})),M=t,document.querySelectorAll(M.formSelector).forEach((e=>{((e,t)=>{const n=e.querySelectorAll(t.inputSelector),a=e.querySelector(t.submitButtonSelector);o(n,a,t),n.forEach((s=>{s.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,t,t.validationMessage,o)})(e,s,t),o(n,a,t)}))}))})(e,M)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,